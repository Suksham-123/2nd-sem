#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_SIZE 100

typedef struct {
    int top;
    char data[MAX_SIZE];
} Stack;

void push(Stack *s, char c) {
    if (s->top == MAX_SIZE - 1) {
        printf("Stack overflow!\n");
        exit(1);
    }
    s->top++;
    s->data[s->top] = c;
}

char pop(Stack *s) {
    if (s->top == -1) {
        printf("Stack underflow!\n");
        exit(1);
    }
    char c = s->data[s->top];
    s->top--;
    return c;
}

int is_empty(Stack *s) {
    return (s->top == -1);
}

int is_valid_expression(char *expr) {
    Stack s;
    s.top = -1;
    int i;
    for (i = 0; i < strlen(expr); i++) {
        char c = expr[i];
        if (c == '(') {
            push(&s, c);
        } else if (c == ')') {
            if (is_empty(&s)) {
                return 0;
            } else {
                pop(&s);
            }
        }
    }
    return is_empty(&s);
}

int main() {
    char expr[MAX_SIZE];
    printf("Enter an expression: ");
    scanf("%s", expr);
    if (is_valid_expression(expr)) {
        printf("Expression is correctly parenthesized.\n");
    } else {
        printf("Expression is NOT correctly parenthesized.\n");
    }
    return 0;
}
