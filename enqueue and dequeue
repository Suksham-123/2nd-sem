#include <stdio.h>
#define MAX_SIZE 10

int queue[MAX_SIZE];
int front = -1, rear = -1;

void enqueue(int value) {
  if (rear == MAX_SIZE - 1) {
    printf("Queue is full\n");
    return;
  }
  if (front == -1 && rear == -1)
    front = rear = 0;
  else
    rear++;
  queue[rear] = value;
}

int dequeue() {
  if (front == -1 || front > rear) {
    printf("Queue is empty\n");
    return -1;
  }
  int deletedValue = queue[front];
  front++;
  return deletedValue;
}

void show() {
  if (front == -1 || front > rear) {
    printf("Queue is empty\n");
    return;
  }
  printf("Queue: ");
  for (int i = front; i <= rear; i++)
    printf("%d ", queue[i]);
  printf("\n");
}

int main() {
  int choice, value;

  while (1) {
    printf("Enter choice:\n");
    printf("1. Enqueue\n2. Dequeue\n3. Show\n4. Exit\n");
    scanf("%d", &choice);
    switch (choice) {
      case 1:
        printf("Enter value to be enqueued: ");
        scanf("%d", &value);
        enqueue(value);
        break;
      case 2:
        value = dequeue();
        if (value != -1)
          printf("Dequeued value: %d\n", value);
        break;
      case 3:
        show();
        break;
      case 4:
        printf("Exiting...\n");
        return 0;
      default:
        printf("Invalid choice\n");
    }
  }
  return 0;
}
